{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Filter","props","value","onChange","Names","persons","filter","setPersons","setMessage","person","name","toLowerCase","indexOf","map","onePerson","i","number","onClick","window","confirm","personService","setTimeout","PersonForm","onSubmit","newName","handleNewName","newNumber","handleNewNumber","type","Notification","message","error","className","App","useState","setNewName","setNewNumber","setFilter","wasError","setError","useEffect","console","log","event","target","preventDefault","nameObject","one","concat","find","catch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1478f501.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll: getAll, \n  create: create,\n  update: update,\n  deletePerson: deletePerson \n}","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\n\n\nconst App = () => {\n  // Hooks\n  const [persons, setPersons] = useState([])\n\n  const [ newName, setNewName ] = useState('')\n\n  const [ newNumber, setNewNumber ] = useState('')\n\n  const [ filter, setFilter ] = useState('')\n\n  const [message, setMessage] = useState(null)\n\n  const [wasError, setError] = useState(false)\n\n  useEffect(() => {\n      personService\n      .getAll()\n      .then(response => {\n          console.log(\"promise fulfilled\")\n          setPersons(response)\n      })\n  }, [])\n\n  // Eventhadlers\n  const handleFilter = (event) => {\n    console.log(event.target.value)\n      setFilter(event.target.value)\n  }\n\n  const handleNewName = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n\n  const addName = (event) => {\n      event.preventDefault()\n      const nameObject = {\n          name: newName,\n          number: newNumber\n      }\n      const names = persons.map(one => one.name)\n      if (names.indexOf(newName) === -1) {\n        personService\n        .create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('') \n          setMessage(\n            `Added ${nameObject.name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n      }\n      else {\n          if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n              const id = persons.find(person => person.name === newName).id\n              console.log(id)\n              personService\n              .update(id, nameObject)\n              .then(response => {\n                setPersons(persons.map(person => person.id !== id ? person : response))\n                setMessage(\n                  `Changed ${nameObject.name}'s number`\n                )\n                setTimeout(() => {\n                  setMessage(null)\n                }, 4000)\n              })\n              .catch(error => {\n                setError(true)\n                setMessage(\n                  `Information of ${nameObject.name} has already been removed from server`\n                )\n                setTimeout(() => {\n                  setMessage(null)\n                  setError(false)\n                }, 4000)\n              })\n          }\n      }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={message} error={wasError} />\n        <Filter value={filter} onChange={handleFilter} />\n      <h2>add a new</h2>\n        <PersonForm onSubmit={addName} newName={newName} handleNewName={handleNewName}\n                    newNumber={newNumber} handleNewNumber={handleNewNumber}\n        />\n      <h2>Numbers</h2>\n        <Names persons={persons} filter={filter} setPersons={setPersons}\n               setMessage={setMessage}/>\n    </div>\n  )\n\n}\n\nconst Filter = (props) => {\n    return (\n        <div>\n            filter shown with <input value={props.value}\n                                     onChange={props.onChange} />\n        </div>\n    )\n}\n\nconst Names = ({persons, filter, setPersons, setMessage}) => {\n    // Handle delete\n    const handleDelete = (id, name) => {\n      if(window.confirm(`Delete ${name}?`)) {\n        personService\n        .deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          setMessage(\n            `Deleted ${name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 4000)\n        })\n      }\n      \n    }\n\n    // This returns filtered array\n    const namesFiltered = () => {\n        const filtered = persons.filter(person => \n            person.name.toLowerCase().indexOf(filter.toLowerCase()) != -1)\n        return filtered\n    }\n\n    return (\n        <div>\n            {namesFiltered().map((onePerson, i) => \n                <div key={i}> \n                    {onePerson.name + \" \" + onePerson.number}\n                    <button onClick={() => handleDelete(onePerson.id, onePerson.name)}>Delete</button> \n                </div>)}\n        </div>\n    )\n}\n\nconst PersonForm = (props) => {\n    return (\n        <div>\n           <form onSubmit={props.onSubmit}>\n            <div>\n              name: <input value={props.newName}\n                           onChange={props.handleNewName} />\n            </div>\n            <div>\n              number: <input value={props.newNumber}\n                             onChange={props.handleNewNumber} />\n            </div>\n            <div>\n              <button type=\"submit\">add</button>\n            </div>\n          </form> \n        </div>\n        \n    )\n}\n\nconst Notification = ({ message, error}) => {\n  if (message === null) {\n    return null\n  }\n  if (error) {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}